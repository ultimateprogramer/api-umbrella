LOCAL proxy.local.incoming_ip_to_bind STRING {{trafficserver.host}}
CONFIG proxy.config.http.server_ports STRING {{trafficserver.port}}
CONFIG proxy.config.admin.autoconf_port INT {{trafficserver.autoconf_port}}
CONFIG proxy.config.process_manager.mgmt_port INT {{trafficserver.management_port}}

# Use the special "#-1" value to keep running as the current user (perp will
# handle switching the user).
CONFIG proxy.config.admin.user_id STRING #-1

# Specify where to find the TrafficServer binaries, plugins, etc. Our config
# files are in a non-default location by using TS_ROOT (this is done so that
# the config files can co-exist with the rest of the API Umbrella config files,
# and so that we can relocate the location for running tests). Therefore, we
# must explicitly point back to the original TrafficServer install directory.
# This could potentially be made cleaner without the use of TS_ROOT with the
# new proxy.config.config_dir setting
# (https://issues.apache.org/jira/browse/TS-3192), but I wasn't able to get
# that to quite work properly.
CONFIG proxy.config.bin_path STRING {{_embedded_root_dir}}/bin
CONFIG proxy.config.plugin.plugin_dir STRING {{_embedded_root_dir}}/libexec/trafficserver
CONFIG proxy.config.body_factory.template_sets_dir STRING {{_embedded_root_dir}}/etc/trafficserver/body_factory

# Log to the standard API Umbrella log directory location.
CONFIG proxy.config.log.logfile_dir STRING {{log_dir}}/trafficserver

# Use logs_xml.config for defining the logs.
CONFIG proxy.config.log.squid_log_enabled INT 0

# Rotate log files with logrotate to be consistent with all the other API
# Umbrella components.
CONFIG proxy.config.log.rolling_enabled INT 0

# Increase timeouts to match the timeouts in other pieces of the stack.
CONFIG proxy.config.http.transaction_no_activity_timeout_in INT {{trafficserver._transaction_no_activity_timeout_in}}
CONFIG proxy.config.http.transaction_no_activity_timeout_out INT {{trafficserver._transaction_no_activity_timeout_out}}
CONFIG proxy.config.http.connect_attempts_timeout INT {{trafficserver._connect_attempts_timeout}}

# Retry the connection to the backend nginx API router server if it fails. This
# may happen when nginx is being reloaded since TrafficServer is holding
# keep-alive connections open to the backend
# (proxy.config.http.keep_alive_enabled_out) and the reload process may lead to
# TrafficServer trying to re-use a connection to a killed worker.
CONFIG proxy.config.http.connect_attempts_max_retries INT 3
CONFIG proxy.config.http.connect_attempts_max_retries_dead_server INT 3

# Don't consider the backend down, even if some requests timeout. Since we're
# actually funneling all of our existing traffic back through a single nginx
# backend, we don't want some bad API requests to mark the entire nginx backend
# as being down.
CONFIG proxy.config.http.down_server.cache_time INT 0

# Don't append IP information to X-Forwarded-For or Client-IP headers, since
# we've already dealt with those at the first nginx proxy layer.
CONFIG proxy.config.http.anonymize_insert_client_ip INT 0
CONFIG proxy.config.http.insert_squid_x_forwarded_for INT 0

# Don't perform caching when the request contains cookies.
CONFIG proxy.config.http.cache.cache_responses_to_cookies INT 0

# Disable read_while_writer, since it can delay processing for mis-matched HTTP
# methods: https://issues.apache.org/jira/browse/TS-3431
# Instead, we'll use the connection collapsing plugin, which actually seems
# closer to the behavior we want.
CONFIG proxy.config.cache.enable_read_while_writer INT 0

# Include information in the Via response indicating whether this was a cache
# hit or not.
CONFIG proxy.config.http.insert_response_via_str INT 2

# Do not include the Via headers on the requests to the backend servers. This
# is for two reasons:
# - It may disable gzip responses from underlying API backend servers by
#   default: https://community.akamai.com/community/web-performance/blog/2015/05/06/beware-the-via-header-disabled-compression-can-have-a-performance-impact
# - It prevents API Umbrella from making circular requests to itself as an API
#   backend (which is admittedly an edge-case, but we had some usage of this):
#   https://issues.apache.org/jira/browse/TS-2298
CONFIG proxy.config.http.insert_request_via_str INT 0

# Don't include the TrafficServer version number in the Via headers.
CONFIG proxy.config.http.request_via_str STRING ApacheTrafficServer
CONFIG proxy.config.http.response_via_str STRING ApacheTrafficServer

# Don't override the "Server" response header with the TrafficServer signature.
CONFIG proxy.config.http.response_server_enabled INT 0

# Retain the Host header we send to trafficserver for cache key purposes so
# that each host gets cached separately.
CONFIG proxy.config.url_remap.pristine_host_hdr INT 1

# Additional custom configuration
{{#trafficserver.embedded_server_config.records}}
{{.}}
{{/trafficserver.embedded_server_config.records}}
